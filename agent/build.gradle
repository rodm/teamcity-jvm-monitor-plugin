
plugins {
    id 'org.gradle.java'
    id 'org.gradle.jacoco'
    id 'com.github.rodm.teamcity-agent'
}

def javaHome = System.properties['java.home']

sourceCompatibility = 1.8
targetCompatibility = 1.8

archivesBaseName = 'jvm-monitor-agent'

sourceSets {
    functional {
        compileClasspath += main.output + configurations.testRuntime
        runtimeClasspath += main.output + configurations.testRuntime
    }
}

dependencies {
    compile project(':common')
    provided files("${javaHome}/../lib/tools.jar")

    testCompile group: 'org.junit', name: 'junit-bom', version: '5.2.0'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api'
    testCompile group: 'org.junit-pioneer', name: 'junit-pioneer', version: '0.1.2'
    testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.20.0'

    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine'
}

test {
    useJUnitPlatform()
}

task functionalTest(type: Test) {
    description = 'Runs the functional tests.'
    group = 'verification'
    useJUnitPlatform()
    testClassesDirs = sourceSets.functional.output.classesDirs
    classpath = project.files(jar, sourceSets.functional.runtimeClasspath)
}

teamcity {
    version = teamcityVersion

    agent {
        archiveName = "jvm-monitor-agent.zip"

        descriptor {
            pluginDeployment {
                useSeparateClassloader = true
            }
        }
    }
}
